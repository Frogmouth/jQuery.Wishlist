{"name":"Jquery.wishlist","tagline":"A simple jquery plugin for manage a wishlist with cookies and without registration needed.","body":"_Sorry for my bad English :: FrogMouth_\r\n\r\njQuery.Wishlist\r\n===============\r\n\r\nA simple jquery plugin for manage a wishlist with cookies and without registration needed.\r\n\r\n### Current Version: 1.3.2\r\n\r\nRequirements\r\n---------------------\r\n\r\n*Wishlist* needs some library for works 100%, in the future, we want to creating a light versione without these libs, but today for boost developing plug-in we need it.\r\n\r\n* [jQuery](http://jquery.com/ \"jQuery Home\") (> 1.8 raccomanded)\r\n* [Underscore JS](http://underscorejs.org/ \"Underscore Home\")\r\n* [Backbone JS](http://backbonejs.org/ \"Backbone Home\")\r\n* [JSON2](https://github.com/douglascrockford/JSON-js \"Json2 GitHub\")\r\n* [jCookies](https://github.com/carhartl/jquery-cookie \"jquery-cookie\")\r\n\r\nWhat can we do?\r\n---------------------\r\n\r\nWith *Wishlist* you can create a simple bar or button (or what you like) who save page's information into a cookie for create a simple wishlist (or reminder, or cart, ...).\r\nTo do that we use **localStorage** or **cookie** (if localstorage is disabled). It's an alternative to the registration, **a simple way to do a complex thing**.\r\n\r\n**Backbone**, why? Because it allows me to have some very useful tools for the development.\r\nCollections and models of Backbone allow to manipulate the information with smart and powerfull tools, like: filtering, ordering, ecc... and in the future it allows the possibility to integrate with a server side app.\r\n\r\nIt's a jQuery plugin only because it's friendly for more developer, rather that Backbone only, but in the future maybe we will use jQuery only for the View.\r\n\r\nDone and To do list:\r\n---------------------\r\n\r\n**DONE:**\r\n\r\n- NEW 1.3 version (deep rebuild)\r\n- Implement **localStorage** as an alternative of COOKIE (using cookie only for send items id to backend)\r\n- a NEW Working example\r\n- wishlist bar\r\n- wishlist item\r\n\r\n**TO DO:**\r\n\r\n- Continue to Developed the Core Script\r\n- Exploit the possibilities of Backbone\r\n- Develop client management wisthlist (like item order, item prop, ecc...)\r\n- Crossbrowser bug fix (> IE8)\r\n- Dev other some **RedyToUse** exaples with graphics (CSS/HTML - button and bar)\r\n- Use some customs methods instead jquery Cookie to work with Cookie\r\n\r\n**Remote Dev**\r\n\r\n- Integrate the ability to communicate with a server ( _REST_ ) via Backbone\r\n\r\nQuick start:\r\n---\r\n\r\nCalls inside document ready `$.Wishlist(ID)` where `ID` is a unique string that represents the ID of your wishlist, in every page the ID must be the same to get the wishlist item.\r\n\r\n    $(function(){\r\n\t\twindow.MYwishlist = $.Wishlist(\"wishlist\");\r\n\t});\r\n\r\n`MYwishlist.data` is the Backbone collection of your wished ITEM.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}